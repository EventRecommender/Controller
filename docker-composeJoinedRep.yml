version: v3

services:
  controller:
    build: .
    deploy:
      replicas: 2
      endpoint_mode: dnsrr
    
  #Recommender
  recommender-service: 
    build: ./recommender/RecommenderService
    deploy:
      replicas: 2
      endpoint_mode: dnsrr

  recommender-database:
    image: mysql
    container_name: mysql_recommender
    environment:
      MYSQL_ROOT_PASSWORD: duper
      MYSQL_DATABASE: recommender_db
    ports:
      - 3309:3306
    volumes:
      - ./recommender/mysql_db_data:/var/lib/mysql
      - ./recommender/entry:/docker-entrypoint-initdb.d/

  # Activity
  activity-service: 
    build: ./activity/ActivityService
    deploy:
      replicas: 2
      endpoint_mode: dnsrr

  activity-database:
    image: mysql
    container_name: activity_database
    environment:
      MYSQL_ROOT_PASSWORD: super
      MYSQL_DATABASE: activity_db
    ports:
      - 3308:3306
    volumes:
      - ./activity/mysql_db_data:/var/lib/mysql
      - ./activity/entry:/docker-entrypoint-initdb.d/ 
  
  # usermanager
  usermanager-service: 
    build: ./usermanager/UserManager
    deploy:
      replicas: 2
      endpoint_mode: dnsrr

  usermanager-database:
    image: mysql
    container_name: usermanager_database
    environment:
      MYSQL_ROOT_PASSWORD: fuper
      MYSQL_DATABASE: usermanager_db
    ports:
      - 3307:3306
    volumes:
      - ./usermanager/UserManager/mysql_db_data:/var/lib/mysql
      - ./usermanager/UserManager/entry:/docker-entrypoint-initdb.d/ 
  
  # Scraper
  scraper:
    build: ./scraper/Scraper
    container_name: scraper-service
    ports: 
      - 7000:5000

  # using nginx to utilize load balancing to the controllers
  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - controller

